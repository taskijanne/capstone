{
  "id": 366,
  "title": "Minimum description length",
  "data": "Minimum Description Length (MDL) is a model selection principle where the shortest description of the data is the best model. MDL methods learn through a data compression perspective and are sometimes described as mathematical applications of Occam's razor. The MDL principle can be extended to other forms of inductive inference and learning, for example to estimation and sequential prediction, without explicitly identifying a single model of the data. MDL has its origins mostly in information theory and has been further developed within the general fields of statistics, theoretical computer science and machine learning, and more narrowly computational learning theory. Historically, there are different, yet interrelated, usages of the definite noun phrase \"the minimum description length principle\" that vary in what is meant by description: Selecting the minimum length description of the available data as the best model observes the principle identified as Occam's razor.  Prior to the advent of computer programming, generating such descriptions was the intellectual labor of scientific theorists.  It was far less formal than it has become in the computer age.  If two scientists had a theoretic disagreement, they rarely could formally apply Occam's razor to choose between their theories.  They would have different data sets and possibly different descriptive languages.  Nevertheless, science advanced as Occam's razor was an informal guide in deciding which model was best. With the advent of formal languages and computer programming Occam's razor was mathematically defined.  Models of a given set of observations, encoded as bits of data, could be created in the form of computer programs that output that data.  Occam's razor could then formally select the shortest program, measured in bits of this algorithmic information, as the best model. To avoid confusion, note that there is nothing in the MDL principle that implies a machine produced the program embodying the model.  It can be entirely the product of humans.  The MDL principle applies regardless of whether the description to be run on a computer is the product of humans, machines or any combination thereof.  The MDL principle requires only that the shortest description, when executed, produce the original data set without error. The distinction in computer programs between programs and literal data applies to all formal descriptions and is sometimes referred to as \"two parts\" of a description.  In statistical MDL learning, such a description is frequently called a two-part code. MDL applies in machine learning when algorithms (machines) generate descriptions.  Learning occurs when an algorithm generates a shorter description of the same data set. The theoretic minimum description length of a data set, called its Kolmogorov complexity, cannot, however, be computed. That is to say, even if by random chance an algorithm generates the shortest program of all that outputs the data set, an automated theorem prover cannot prove there is no shorter such program.  Nevertheless, given two programs that output the dataset, the MDL principle selects the shorter of the two as embodying the best model. Recent machine MDL learning of algorithmic, as opposed to statistical, data models have received increasing attention with increasing availability of data, computation resources and theoretic advances.[2][3] Approaches are informed by the burgeoning field of artificial general intelligence.  Shortly before his death, Marvin Minsky came out strongly in favor of this line of research, saying:[4] It seems to me that the most important discovery since Gödel was the discovery by Chaitin, Solomonoff and Kolmogorov of the concept called Algorithmic Probability which is a fundamental new theory of how to make predictions given a collection of experiences and this is a beautiful theory, everybody should learn it, but it’s got one problem, that is, that you cannot actually calculate what this theory predicts because it is too hard, it requires an infinite amount of work. However, it should be possible to make practical approximations to the Chaitin, Kolmogorov, Solomonoff theory that would make better predictions than anything we have today. Everybody should learn all about that and spend the rest of their lives working on it. Any set of data can be represented by a string of symbols from a finite (say, binary) alphabet. [The MDL Principle] is based on the following insight: any regularity in a given set of data can be used to compress the data, i.e. to describe it using fewer symbols than needed to describe the data literally. (Grünwald, 2004)[5] Based on this, in 1978, Jorma Rissanen published an MDL learning algorithm using the statistical notion of information rather than algorithmic information.  Over the past 40 years this has developed into a rich theory of statistical and machine learning procedures with connections to Bayesian model selection and averaging, penalization methods such as Lasso and Ridge, and so on - Grünwald and Roos (2020)[6] give an introduction including all modern developments. Rissanen started out with this idea: all statistical learning is about finding regularities in data, and the best hypothesis to describe the regularities in data is also the one that is able to statistically compress the data most. Like other statistical methods, it can be used for learning the parameters of a model using some data. Usually though, standard statistical methods assume  that the general form of a model is fixed. MDL's main strength is that it can also be used for selecting the general form of a model and its parameters. The quantity of interest (sometimes just a model, sometimes just parameters, sometimes both at the same time)  is called a hypothesis. The basic idea is then to consider the (lossless) two-stage code that encodes data \n\n\n\nD\n\n\n{\\displaystyle D}\n\n with length \n\n\n\n\nL\n(\nD\n)\n\n\n\n{\\displaystyle {L(D)}}\n\n by first encoding a hypothesis \n\n\n\nH\n\n\n{\\displaystyle H}\n\n in the set of considered hypotheses \n\n\n\n\n\nH\n\n\n\n\n{\\displaystyle {\\cal {H}}}\n\n  and then coding \n\n\n\nD\n\n\n{\\displaystyle D}\n\n \"with the help of\" \n\n\n\nH\n\n\n{\\displaystyle H}\n\n; in the simplest context this just means \"encoding the deviations of the data from the predictions made by \n\n\n\nH\n\n\n{\\displaystyle H}\n\n: L\n(\nD\n)\n\n=\n\nmin\n\nH\n∈\n\n\nH\n\n\n\n\n \n(\n \nL\n(\nH\n)\n+\nL\n(\nD\n\n|\n\nH\n)\n \n)\n \n\n\n{\\displaystyle {L(D)}=\\min _{H\\in {\\cal {H}}}\\ (\\ L(H)+L(D|H)\\ )\\ } The \n\n\n\nH\n\n\n{\\displaystyle H}\n\n achieving this minimum is then viewed as the best explanation of data \n\n\n\nD\n\n\n{\\displaystyle D}\n\n. As a simple example, take a regression problem: the data \n\n\n\nD\n\n\n{\\displaystyle D}\n\n could consist of a sequence of points \n\n\n\nD\n=\n(\n\nx\n\n1\n\n\n,\n\ny\n\n1\n\n\n)\n,\n…\n,\n(\n\nx\n\nn\n\n\n,\n\ny\n\nn\n\n\n)\n\n\n{\\displaystyle D=(x_{1},y_{1}),\\ldots ,(x_{n},y_{n})}\n\n, the set \n\n\n\n\n\nH\n\n\n\n\n{\\displaystyle {\\cal {H}}}\n\n could be the set of all polynomials from \n\n\n\nX\n\n\n{\\displaystyle X}\n\n to \n\n\n\nY\n\n\n{\\displaystyle Y}\n\n. To describe a polynomial \n\n\n\nH\n\n\n{\\displaystyle H}\n\n of degree (say) \n\n\n\nk\n\n\n{\\displaystyle k}\n\n, one would first have to discretize the parameters to some precision; one would then have to describe this precision (a natural number); next, one would have to describe the degree \n\n\n\nk\n\n\n{\\displaystyle k}\n\n (another natural number), and in the final step, one would have to describe \n\n\n\nk\n+\n1\n\n\n{\\displaystyle k+1}\n\n parameters; the total length would be \n\n\n\nL\n(\nH\n)\n\n\n{\\displaystyle L(H)}\n\n. One would then describe the points in \n\n\n\nD\n\n\n{\\displaystyle D}\n\n using some fixed code for the x-values and then using a code for the \n\n\n\nn\n\n\n{\\displaystyle n}\n\n deviations \n\n\n\n\ny\n\ni\n\n\n−\nH\n(\n\nx\n\ni\n\n\n)\n\n\n{\\displaystyle y_{i}-H(x_{i})}\n\n. In practice, one often (but not always) uses a probabilistic model. For example, one associates each polynomial \n\n\n\nH\n\n\n{\\displaystyle H}\n\n with the corresponding conditional distribution expressing that given \n\n\n\nX\n\n\n{\\displaystyle X}\n\n, \n\n\n\nY\n\n\n{\\displaystyle Y}\n\n is normally distributed with mean \n\n\n\nH\n(\nX\n)\n\n\n{\\displaystyle H(X)}\n\n and some variance \n\n\n\n\nσ\n\n2\n\n\n\n\n{\\displaystyle \\sigma ^{2}}\n\n which could either be fixed or added as a free parameter. Then the set of hypotheses \n\n\n\n\n\nH\n\n\n\n\n{\\displaystyle {\\cal {H}}}\n\n reduces to the assumption of a linear[clarification needed] model, \n\n\n\nY\n=\nH\n(\nX\n)\n+\nϵ\n\n\n{\\displaystyle Y=H(X)+\\epsilon }\n\n , with \n\n\n\nH\n\n\n{\\displaystyle H}\n\n a polynomial. Furthermore, one is often not directly interested in specific parameters values, but just, for example, the degree of the polynomial. In that case, one sets \n\n\n\n\n\nH\n\n\n\n\n{\\displaystyle {\\cal {H}}}\n\n to be \n\n\n\n\n\nH\n\n\n=\n{\n\n\n\nH\n\n\n\n0\n\n\n,\n\n\n\nH\n\n\n\n1\n\n\n,\n…\n}\n\n\n{\\displaystyle {\\cal {H}}=\\{{\\cal {H}}_{0},{\\cal {H}}_{1},\\ldots \\}}\n\nwhere each \n\n\n\n\n\n\nH\n\n\n\nj\n\n\n\n\n{\\displaystyle {\\cal {H}}_{j}}\n\n represents the hypothesis that the data is best described as a j-th degree polynomial. One then codes data \n\n\n\nD\n\n\n{\\displaystyle D}\n\n given hypothesis \n\n\n\n\n\n\nH\n\n\n\nj\n\n\n\n\n{\\displaystyle {\\cal {H}}_{j}}\n\n using a one-part code designed such that, whenever some hypothesis \n\n\n\nH\n∈\n\n\n\nH\n\n\n\nj\n\n\n\n\n{\\displaystyle H\\in {\\cal {H}}_{j}}\n\n fits the data well, the codelength \n\n\n\nL\n(\nD\n\n|\n\nH\n)\n\n\n{\\displaystyle L(D|H)}\n\n is short. The design of such codes is called universal coding. There are various types of universal codes one could use, often giving similar lengths for long data sequences but differing for short ones. The 'best' (in the sense that it has a minimax optimality property) are the normalized maximum likelihood (NML)  or Shtarkov codes. A quite useful class of codes are the Bayesian marginal likelihood codes. For exponential families of distributions, when Jeffreys prior is used and the parameter space is suitably restricted, these asymptotically coincide with the NML codes; this brings MDL theory in close contact with objective Bayes model selection, in which one also sometimes adopts Jeffreys'  prior, albeit for different reasons. The MDL approach to model selection \"gives a selection criterion formally identical to the BIC approach\"[7] for large number of samples. A coin is flipped 1000 times, and the numbers of heads and tails are recorded. Consider two model classes: For this reason, a naive statistical method might choose the second model as a better explanation for the data. However, an MDL approach would construct a single code based on the hypothesis, instead of just using the best one. This code could be the normalized maximum likelihood code or a Bayesian code.  If such a code is used, then the total codelength based on the second model class would be larger than 1000 bits. Therefore, the conclusion when following an MDL approach is inevitably that there is not enough evidence to support the hypothesis of the biased coin, even though the best element of the second model class provides better fit to the data. Central to MDL theory is the one-to-one correspondence between code length functions and probability distributions (this follows from the Kraft–McMillan inequality). For any probability distribution \n\n\n\nP\n\n\n{\\displaystyle P}\n\n, it is possible to construct a code \n\n\n\nC\n\n\n{\\displaystyle C}\n\n such that the length (in bits) of \n\n\n\nC\n(\nx\n)\n\n\n{\\displaystyle C(x)}\n\n is equal to \n\n\n\n−\n\nlog\n\n2\n\n\n⁡\nP\n(\nx\n)\n\n\n{\\displaystyle -\\log _{2}P(x)}\n\n; this code minimizes the expected code length. Conversely, given a code \n\n\n\nC\n\n\n{\\displaystyle C}\n\n, one can construct a probability distribution \n\n\n\nP\n\n\n{\\displaystyle P}\n\n such that the same holds. (Rounding issues are ignored here.) In other words, searching for an efficient code is equivalent to searching for a good probability distribution. The description language of statistical MDL is not computationally universal.  Therefore it cannot, even in principle, learn models of recursive natural processes. Statistical MDL learning is very strongly connected to probability theory and statistics through the correspondence between codes and probability distributions mentioned above. This has led some researchers to view MDL as equivalent to Bayesian inference: code length of model and data together in MDL correspond respectively to prior probability and marginal likelihood in the Bayesian framework.[8] While Bayesian machinery is often useful in constructing efficient MDL codes, the MDL framework also accommodates other codes that are not Bayesian. An example is the Shtarkov normalized maximum likelihood code, which plays a central role in current MDL theory, but has no equivalent in Bayesian inference.  Furthermore, Rissanen stresses that we should make no assumptions about the true data-generating process: in practice, a model class is typically a simplification of reality and thus does not contain any code or probability distribution that is true in any objective sense.[9][self-published source?][10] In the last mentioned reference Rissanen bases the mathematical underpinning of MDL on the Kolmogorov structure function. According to the MDL philosophy, Bayesian methods should be dismissed if they are based on unsafe priors that would lead to poor results. The priors that are acceptable from an MDL point of view also tend to be favored in so-called objective Bayesian analysis; there, however, the motivation is usually different.[11] Rissanen's was not the first information-theoretic approach to learning; as early as 1968 Wallace and Boulton pioneered a related concept called minimum message length (MML). The difference between MDL and MML is a source of ongoing confusion. Superficially, the methods appear mostly equivalent, but there are some significant differences, especially in interpretation:",
  "source_url": "https://en.wikipedia.org/wiki/Minimum_description_length"
}